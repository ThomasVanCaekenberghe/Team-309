#include "IRremote.h"

int previous_value;

// Speaker Pin
const int speaker = A2

// Leds pin
const int leds = A4

// IR Receiver
const int receiverPin = 5;

// Left Motor
const int pwmleftPin = 6;
const int revleftPin = 7;

//  Right Motor
const int pwmrightPin = 9;
const int revrightPin = 8;


void setup() {
  pinMode(pwmleftPin, OUTPUT);
  pinMode(revrleftPin, OUTPUT);
  pinMode(pwmrightPin, OUTPUT);
  pinMode(revrightPin, OUTPUT);
  pinMode(leds, OUTPUT);
  pinMode(speaker, OUTPUT);

  Serial.begin(9600);
  irrecv.enableIRIn(); // Start the receiver

  
  
}


void loop()
{
  Serial.println(results.value, HEX); //prints the hex value a a button press
  if (irrecv.decode(&results)) // have we received an IR signal?
  {
    translateIR(); 
    irrecv.resume(); // receive the next value
  }
}


void forward()
{
  analogWrite(pwmleftPin, HIGH);
  analogWrite(pwmrightPin, HIGH);  
}


void backward()
{
  digitalWrite(revleftPin, HIGH);   
  analogWrite(pwmleftPin, HIGH);
  digitalWrite(revrightPin, HIGH);
  analogWrite(pwmrightPin, HIGH); 
}


void right_turn()
{
  analogWrite(pwmleftPin, HIGH);
  digitalWrite(revrightPin, HIGH);
  analogWrite(pwmrightPin, HIGH);
}


void left_turn()
{
  digitalWrite(revleftPin, HIGH);
  analogWrite(pwmleftPin, HIGH);
  analogWrite(pwmrightPin, HIGH);
}


void change_speed()
{
  if (revleftPin == HIGH && revrightPin == HIGH)
  {
    digitalWrite(revleftPin, LOW);
    digitalWrite(revrightPin, LOW);  
  }
  if (revleftPin == LOW and revrightPin == LOW)
  {
    digitalWrite(revleftPin, HIGH);
    digitalWrite(revrightPin, HIGH);    
  }
}


void translateIR()

{ 
  switch(results.value) 
  {
    
  case 0x20DF02FD:
    Serial.println("Forward");
    //forward();
    break;

  case 0x20DF827D:
    Serial.println("Backward");
    //backward(); 
    break;

  case 0x20DF609F:
    Serial.println("Left turn");
    //right_turn();
    break;

  case 0x20DFE01F:
    Serial.println("Right turn");
    //left_turn(); 
    break;

  case 0x20DF22DD:  
    Serial.println("Ok");
    // change_speed();
    break;

  case 0x20DF0DF2:  
    Serial.println("Play"); 
    break;

  case 0x20DF10EF:  
    Serial.println("Docstation"); 
    break;
    
  }

  delay(100);

}
